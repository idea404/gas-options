/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  CollateralManager,
  CollateralManagerInterface,
} from "../CollateralManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CollateralAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "optionContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CollateralReserved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "optionContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CollateralReturned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CollateralWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "optionContract",
        type: "address",
      },
    ],
    name: "OptionRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "addCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "collateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_option",
        type: "address",
      },
    ],
    name: "registerOption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "reserveCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "returnCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sendNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "validOptions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f25380380610f25833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610e0e806101176000396000f3fe6080604052600436106100955760003560e01c80639b56d6c9116100595780639b56d6c9146101825780639e816999146101bf578063a5fdc5de146101c9578063c45a015514610206578063f30c2560146102315761009c565b80632365d6f0146100a15780632a50d2b7146100de5780636112fe2e14610107578063668075661461013057806374e863ad146101595761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610a26565b61025a565b6040516100d59190610a6e565b60405180910390f35b3480156100ea57600080fd5b5061010560048036038101906101009190610abf565b61027a565b005b34801561011357600080fd5b5061012e60048036038101906101299190610aff565b6103ae565b005b34801561013c57600080fd5b5061015760048036038101906101529190610abf565b61051e565b005b34801561016557600080fd5b50610180600480360381019061017b9190610abf565b610638565b005b34801561018e57600080fd5b506101a960048036038101906101a49190610a26565b61076c565b6040516101b69190610b3b565b60405180910390f35b6101c76107b5565b005b3480156101d557600080fd5b506101f060048036038101906101eb9190610a26565b61085b565b6040516101fd9190610b3b565b60405180910390f35b34801561021257600080fd5b5061021b610873565b6040516102289190610b65565b60405180910390f35b34801561023d57600080fd5b5061025860048036038101906102539190610a26565b610897565b005b60026020528060005260406000206000915054906101000a900460ff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fd90610bdd565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103559190610c2c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f4670b0eb4429de39e488890d9e0677bc98793658284c113375e1c296c2ad719f826040516103a29190610b3b565b60405180910390a25050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610430576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042790610cac565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461047f9190610c2c565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156104cc573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d826040516105139190610b3b565b60405180910390a250565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a190610bdd565b60405180910390fd5b804710156105ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e490610d18565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610633573d6000803e3d6000fd5b505050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166106c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bb90610bdd565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107139190610d38565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f3db642b80902afb8ef23a2aeab4800b4b3717feb180705cf0a1c273ccc591c97826040516107609190610b3b565b60405180910390a25050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108049190610d38565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f7dba1be544024070cd5eebfa8bdd80a8b198cea8058c7d3cc1f8dd36e41ab2f7346040516108519190610b3b565b60405180910390a2565b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610925576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091c90610db8565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f03d0d031a62a8d632e89db7ddb4e703549d00ba59d2d764446394b41d00d5eea60405160405180910390a250565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109f3826109c8565b9050919050565b610a03816109e8565b8114610a0e57600080fd5b50565b600081359050610a20816109fa565b92915050565b600060208284031215610a3c57610a3b6109c3565b5b6000610a4a84828501610a11565b91505092915050565b60008115159050919050565b610a6881610a53565b82525050565b6000602082019050610a836000830184610a5f565b92915050565b6000819050919050565b610a9c81610a89565b8114610aa757600080fd5b50565b600081359050610ab981610a93565b92915050565b60008060408385031215610ad657610ad56109c3565b5b6000610ae485828601610a11565b9250506020610af585828601610aaa565b9150509250929050565b600060208284031215610b1557610b146109c3565b5b6000610b2384828501610aaa565b91505092915050565b610b3581610a89565b82525050565b6000602082019050610b506000830184610b2c565b92915050565b610b5f816109e8565b82525050565b6000602082019050610b7a6000830184610b56565b92915050565b600082825260208201905092915050565b7f4f6e6c792076616c6964206f7074696f6e732063616e2063616c6c0000000000600082015250565b6000610bc7601b83610b80565b9150610bd282610b91565b602082019050919050565b60006020820190508181036000830152610bf681610bba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c3782610a89565b9150610c4283610a89565b9250828203905081811115610c5a57610c59610bfd565b5b92915050565b7f496e73756666696369656e7420636f6c6c61746572616c000000000000000000600082015250565b6000610c96601783610b80565b9150610ca182610c60565b602082019050919050565b60006020820190508181036000830152610cc581610c89565b9050919050565b7f496e73756666696369656e7420636f6e74726163742062616c616e6365000000600082015250565b6000610d02601d83610b80565b9150610d0d82610ccc565b602082019050919050565b60006020820190508181036000830152610d3181610cf5565b9050919050565b6000610d4382610a89565b9150610d4e83610a89565b9250828201905080821115610d6657610d65610bfd565b5b92915050565b7f4f6e6c7920666163746f72792063616e2063616c6c0000000000000000000000600082015250565b6000610da2601583610b80565b9150610dad82610d6c565b602082019050919050565b60006020820190508181036000830152610dd181610d95565b905091905056fea2646970667358221220d258ac2fbe324aea18a569a8cc66d9f8af51373001a255768a4c3e73ff0e2e5364736f6c634300081a0033";

type CollateralManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollateralManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CollateralManager__factory extends ContractFactory {
  constructor(...args: CollateralManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_factory, overrides || {});
  }
  override deploy(
    _factory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_factory, overrides || {}) as Promise<
      CollateralManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CollateralManager__factory {
    return super.connect(runner) as CollateralManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollateralManagerInterface {
    return new Interface(_abi) as CollateralManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CollateralManager {
    return new Contract(address, _abi, runner) as unknown as CollateralManager;
  }
}
